{
	"auto_complete":
	{
		"selected_items":
		[
		]
	},
	"buffers":
	[
		{
			"file": ".gitignore",
			"settings":
			{
				"buffer_size": 1867,
				"encoding": "UTF-8",
				"line_ending": "Unix"
			},
			"undo_stack":
			[
				[
					32,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAcHAAAAAAAACAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAABwcAAAAAAAAHBwAAAAAAAAAAAAAAAAAA"
				],
				[
					34,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAAAgHAAAAAAAACQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACAcAAAAAAAAIBwAAAAAAAAAAAAAAAPC/"
				],
				[
					37,
					1,
					"insert",
					{
						"characters": "#"
					},
					"AQAAAAgHAAAAAAAACQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACAcAAAAAAAAIBwAAAAAAAAAAAAAAAAAA"
				],
				[
					39,
					1,
					"insert",
					{
						"characters": "m"
					},
					"AQAAAAkHAAAAAAAACgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACQcAAAAAAAAJBwAAAAAAAAAAAAAAAPC/"
				],
				[
					41,
					1,
					"insert",
					{
						"characters": "y"
					},
					"AQAAAAoHAAAAAAAACwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACgcAAAAAAAAKBwAAAAAAAAAAAAAAAPC/"
				],
				[
					42,
					1,
					"insert",
					{
						"characters": " "
					},
					"AQAAAAsHAAAAAAAADAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAACwcAAAAAAAALBwAAAAAAAAAAAAAAAPC/"
				],
				[
					44,
					1,
					"insert",
					{
						"characters": "files"
					},
					"BQAAAAwHAAAAAAAADQcAAAAAAAAAAAAADQcAAAAAAAAOBwAAAAAAAAAAAAAOBwAAAAAAAA8HAAAAAAAAAAAAAA8HAAAAAAAAEAcAAAAAAAAAAAAAEAcAAAAAAAARBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAADAcAAAAAAAAMBwAAAAAAAAAAAAAAAPC/"
				],
				[
					45,
					1,
					"insert",
					{
						"characters": "\n"
					},
					"AQAAABEHAAAAAAAAEgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEQcAAAAAAAARBwAAAAAAAAAAAAAAAPC/"
				],
				[
					51,
					1,
					"insert",
					{
						"characters": "fcc"
					},
					"AwAAABIHAAAAAAAAEwcAAAAAAAAAAAAAEwcAAAAAAAAUBwAAAAAAAAAAAAAUBwAAAAAAABUHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAEgcAAAAAAAASBwAAAAAAAAAAAAAAAPC/"
				],
				[
					53,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAABUHAAAAAAAAFgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQcAAAAAAAAVBwAAAAAAAAAAAAAAAPC/"
				],
				[
					54,
					1,
					"left_delete",
					null,
					"AQAAABUHAAAAAAAAFQcAAAAAAAABAAAACQ",
					"AQAAAAAAAAABAAAAFgcAAAAAAAAWBwAAAAAAAAAAAAAAAPC/"
				],
				[
					55,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAABUHAAAAAAAAFgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQcAAAAAAAAVBwAAAAAAAAAAAAAAAPC/"
				],
				[
					56,
					1,
					"insert",
					{
						"characters": "\t"
					},
					"AQAAABYHAAAAAAAAFwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFgcAAAAAAAAWBwAAAAAAAAAAAAAAAPC/"
				],
				[
					57,
					2,
					"left_delete",
					null,
					"AgAAABYHAAAAAAAAFgcAAAAAAAABAAAACRUHAAAAAAAAFQcAAAAAAAABAAAAXw",
					"AQAAAAAAAAABAAAAFwcAAAAAAAAXBwAAAAAAAAAAAAAAAPC/"
				],
				[
					58,
					1,
					"insert",
					{
						"characters": "_cat"
					},
					"BAAAABUHAAAAAAAAFgcAAAAAAAAAAAAAFgcAAAAAAAAXBwAAAAAAAAAAAAAXBwAAAAAAABgHAAAAAAAAAAAAABgHAAAAAAAAGQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAFQcAAAAAAAAVBwAAAAAAAAAAAAAAAPC/"
				],
				[
					66,
					1,
					"insert",
					{
						"characters": "_"
					},
					"AQAAABkHAAAAAAAAGgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGQcAAAAAAAAZBwAAAAAAAAAAAAAAAPC/"
				],
				[
					68,
					1,
					"insert",
					{
						"characters": "dog/"
					},
					"BAAAABoHAAAAAAAAGwcAAAAAAAAAAAAAGwcAAAAAAAAcBwAAAAAAAAAAAAAcBwAAAAAAAB0HAAAAAAAAAAAAAB0HAAAAAAAAHgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAGgcAAAAAAAAaBwAAAAAAAAAAAAAAAPC/"
				],
				[
					70,
					1,
					"insert",
					{
						"characters": "ff"
					},
					"AgAAAB4HAAAAAAAAHwcAAAAAAAAAAAAAHwcAAAAAAAAgBwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHgcAAAAAAAAeBwAAAAAAAAAAAAAAAPC/"
				],
				[
					71,
					2,
					"left_delete",
					null,
					"AgAAAB8HAAAAAAAAHwcAAAAAAAABAAAAZh4HAAAAAAAAHgcAAAAAAAABAAAAZg",
					"AQAAAAAAAAABAAAAIAcAAAAAAAAgBwAAAAAAAAAAAAAAAPC/"
				],
				[
					72,
					1,
					"insert",
					{
						"characters": "a"
					},
					"AQAAAB4HAAAAAAAAHwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHgcAAAAAAAAeBwAAAAAAAAAAAAAAAPC/"
				],
				[
					73,
					1,
					"left_delete",
					null,
					"AQAAAB4HAAAAAAAAHgcAAAAAAAABAAAAYQ",
					"AQAAAAAAAAABAAAAHwcAAAAAAAAfBwAAAAAAAAAAAAAAAPC/"
				],
				[
					74,
					1,
					"insert",
					{
						"characters": "cats_and_d"
					},
					"CgAAAB4HAAAAAAAAHwcAAAAAAAAAAAAAHwcAAAAAAAAgBwAAAAAAAAAAAAAgBwAAAAAAACEHAAAAAAAAAAAAACEHAAAAAAAAIgcAAAAAAAAAAAAAIgcAAAAAAAAjBwAAAAAAAAAAAAAjBwAAAAAAACQHAAAAAAAAAAAAACQHAAAAAAAAJQcAAAAAAAAAAAAAJQcAAAAAAAAmBwAAAAAAAAAAAAAmBwAAAAAAACcHAAAAAAAAAAAAACcHAAAAAAAAKAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAHgcAAAAAAAAeBwAAAAAAAAAAAAAAAPC/"
				],
				[
					75,
					1,
					"insert",
					{
						"characters": "ogs"
					},
					"AwAAACgHAAAAAAAAKQcAAAAAAAAAAAAAKQcAAAAAAAAqBwAAAAAAAAAAAAAqBwAAAAAAACsHAAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKAcAAAAAAAAoBwAAAAAAAAAAAAAAAPC/"
				],
				[
					77,
					1,
					"insert",
					{
						"characters": "."
					},
					"AQAAACsHAAAAAAAALAcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAKwcAAAAAAAArBwAAAAAAAAAAAAAAAPC/"
				],
				[
					79,
					1,
					"insert",
					{
						"characters": "z"
					},
					"AQAAACwHAAAAAAAALQcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALAcAAAAAAAAsBwAAAAAAAAAAAAAAAPC/"
				],
				[
					81,
					1,
					"insert",
					{
						"characters": "i"
					},
					"AQAAAC0HAAAAAAAALgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALQcAAAAAAAAtBwAAAAAAAAAAAAAAAPC/"
				],
				[
					83,
					1,
					"insert",
					{
						"characters": "p"
					},
					"AQAAAC4HAAAAAAAALwcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAALgcAAAAAAAAuBwAAAAAAAAAAAAAAAPC/"
				],
				[
					113,
					1,
					"paste",
					null,
					"AQAAADAHAAAAAAAATgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAMAcAAAAAAAAwBwAAAAAAAAAAAAAAAPC/"
				],
				[
					117,
					4,
					"left_delete",
					null,
					"BAAAAEwHAAAAAAAATAcAAAAAAAABAAAAcEsHAAAAAAAASwcAAAAAAAABAAAAaUoHAAAAAAAASgcAAAAAAAABAAAAekkHAAAAAAAASQcAAAAAAAABAAAALg",
					"AQAAAAAAAAABAAAATQcAAAAAAABNBwAAAAAAAAAAAAAAAPC/"
				],
				[
					118,
					1,
					"insert",
					{
						"characters": "/"
					},
					"AQAAAEkHAAAAAAAASgcAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAASQcAAAAAAABJBwAAAAAAAAAAAAAAAPC/"
				]
			]
		},
		{
			"contents": "Package Control Messages\n========================\n\nSublimeLinter\n-------------\n\n                ^ ^\n  SublimeLinter 4.20.0\n\n\n  Holy, finally, I mean: f i n a l l y, we have annotation and inline phantoms[*].\n\n  -- By default, nothing changes, you have to opt-in.\n\n  Here's how it goes as it is a bit tricky and also sophisticated:\n\n  ++ Everything is configured within the `styles` section in the global\n     SublimeLinter settings. For that to work, the style definitions accept two\n     new keys, namely `annotation` and `phantom`.\n\n     These are template strings, therefore e.g. \"{code}\", \"{msg}\", \"{linter}\"\n     are typical values used here.\n     Use \"\" (the default) to turn this feature off.\n\n\n  Because this is implemented as \"style\" of an error, you can adjust and\n  fine-tune the feature for each linter separately. (¬∞¬∞)\n\n  This is extremely important to reduce clutter and noise where possible.\n  Because, believe me, this can lead to clutter and noise.\n\n  For example, while writing, you often produce intermittent syntax errors.\n  But that is natural for writing and shouldn't produce too much visual\n  distraction. You can for example define\n\n      \"mypy\": {\n          \"styles\": [\n              {\n                  \"codes\": [\"syntax\"],  # mypy's rule/code for syntax errors\n                  \"icon\": \"cog\",\n                  \"phantom\": \"\",        # no inline phantoms\n                  \"annotation\": \"üí£\",   # an icon on the right side\n              },\n              {\n                  \"phantom\": \"{msg}\",   # for all other reported problems\n              }\n          ],\n      },\n\n  to mitigate this effect.\n\n  E.g. for \"annotations\", everything is already pretty much in the code. You\n  could try:\n\n      \"annotations\": {\n          \"styles\": [\n              {\n                  \"types\": [\"error\"],\n                  \"scope\": \"region.redish\",\n                  \"annotation\": \"!\"\n              },\n              {\n                  \"annotation\": \"\",\n                  \"phantom\": \"\"\n              },\n          ]\n      },\n\n\n  Especially phantoms are both annoying and the best thing since sliced bread.\n  So we only show them for \"errors\" (not for \"warnings\" etc) as long as there\n  are any errors and only then also for warnings and other types.  Yeah, that\n  should probably be pluggable but then I would never release anything.\n\n  To quickly toggle the phantoms you can use our `sublime_linter_toggle_highlights`\n  command.  By default it toggles both the squiggles and the inline phantoms but: --\n\n      { \"keys\": [\"ctrl+k\", \"ctrl+k\"],\n        \"command\": \"sublime_linter_toggle_highlights\",\n        \"args\": {\"what\": [\"phantoms\"]}  // or \"squiggles\"\n      },\n\n  -- this is already pluggable.\n\n\n  Sincerely,\n  ‚ù§Ô∏è\n\n\n  And yes, I do drink coffee:  https://paypal.me/herrkaste\n\n  [*] Annotations are small text fields on the right hand side of the view at\n      the same line of an error.  Because of that they usually have not much\n      space to show anything.\n      Phantoms appear right below the error and use the full width of the view.\n      They make clear what an error is about, have lots of space but - if you\n      have lots of them in a small section - the actual code might get too\n      interspersed.",
			"settings":
			{
				"buffer_size": 3225,
				"line_ending": "Unix",
				"name": "Package Control Messages",
				"read_only": true,
				"scratch": true
			},
			"undo_stack":
			[
				[
					1,
					1,
					"insert",
					{
						"characters": "Package Control Messages\n========================\n\nSublimeLinter\n-------------\n\n                ^ ^\n  SublimeLinter 4.20.0\n\n\n  Holy, finally, I mean: f i n a l l y, we have annotation and inline phantoms[*].\n\n  -- By default, nothing changes, you have to opt-in.\n\n  Here's how it goes as it is a bit tricky and also sophisticated:\n\n  ++ Everything is configured within the `styles` section in the global\n     SublimeLinter settings. For that to work, the style definitions accept two\n     new keys, namely `annotation` and `phantom`.\n\n     These are template strings, therefore e.g. \"{code}\", \"{msg}\", \"{linter}\"\n     are typical values used here.\n     Use \"\" (the default) to turn this feature off.\n\n\n  Because this is implemented as \"style\" of an error, you can adjust and\n  fine-tune the feature for each linter separately. (¬∞¬∞)\n\n  This is extremely important to reduce clutter and noise where possible.\n  Because, believe me, this can lead to clutter and noise.\n\n  For example, while writing, you often produce intermittent syntax errors.\n  But that is natural for writing and shouldn't produce too much visual\n  distraction. You can for example define\n\n      \"mypy\": {\n          \"styles\": [\n              {\n                  \"codes\": [\"syntax\"],  # mypy's rule/code for syntax errors\n                  \"icon\": \"cog\",\n                  \"phantom\": \"\",        # no inline phantoms\n                  \"annotation\": \"üí£\",   # an icon on the right side\n              },\n              {\n                  \"phantom\": \"{msg}\",   # for all other reported problems\n              }\n          ],\n      },\n\n  to mitigate this effect.\n\n  E.g. for \"annotations\", everything is already pretty much in the code. You\n  could try:\n\n      \"annotations\": {\n          \"styles\": [\n              {\n                  \"types\": [\"error\"],\n                  \"scope\": \"region.redish\",\n                  \"annotation\": \"!\"\n              },\n              {\n                  \"annotation\": \"\",\n                  \"phantom\": \"\"\n              },\n          ]\n      },\n\n\n  Especially phantoms are both annoying and the best thing since sliced bread.\n  So we only show them for \"errors\" (not for \"warnings\" etc) as long as there\n  are any errors and only then also for warnings and other types.  Yeah, that\n  should probably be pluggable but then I would never release anything.\n\n  To quickly toggle the phantoms you can use our `sublime_linter_toggle_highlights`\n  command.  By default it toggles both the squiggles and the inline phantoms but: --\n\n      { \"keys\": [\"ctrl+k\", \"ctrl+k\"],\n        \"command\": \"sublime_linter_toggle_highlights\",\n        \"args\": {\"what\": [\"phantoms\"]}  // or \"squiggles\"\n      },\n\n  -- this is already pluggable.\n\n\n  Sincerely,\n  ‚ù§Ô∏è\n\n\n  And yes, I do drink coffee:  https://paypal.me/herrkaste\n\n  [*] Annotations are small text fields on the right hand side of the view at\n      the same line of an error.  Because of that they usually have not much\n      space to show anything.\n      Phantoms appear right below the error and use the full width of the view.\n      They make clear what an error is about, have lots of space but - if you\n      have lots of them in a small section - the actual code might get too\n      interspersed."
					},
					"qQAAAAAAAAAAAAAAGAAAAAAAAAAAAAAAGAAAAAAAAAAZAAAAAAAAAAAAAAAZAAAAAAAAADEAAAAAAAAAAAAAADEAAAAAAAAAMgAAAAAAAAAAAAAAMgAAAAAAAAAzAAAAAAAAAAAAAAAzAAAAAAAAAEAAAAAAAAAAAAAAAEAAAAAAAAAAQQAAAAAAAAAAAAAAQQAAAAAAAABOAAAAAAAAAAAAAABOAAAAAAAAAE8AAAAAAAAAAAAAAE8AAAAAAAAAUAAAAAAAAAAAAAAAUAAAAAAAAABjAAAAAAAAAAAAAABjAAAAAAAAAGQAAAAAAAAAAAAAAGQAAAAAAAAAegAAAAAAAAAAAAAAegAAAAAAAAB7AAAAAAAAAAAAAAB7AAAAAAAAAHwAAAAAAAAAAAAAAHwAAAAAAAAAfQAAAAAAAAAAAAAAfQAAAAAAAADPAAAAAAAAAAAAAADPAAAAAAAAANAAAAAAAAAAAAAAANAAAAAAAAAA0QAAAAAAAAAAAAAA0QAAAAAAAAAGAQAAAAAAAAAAAAAGAQAAAAAAAAcBAAAAAAAAAAAAAAcBAAAAAAAACAEAAAAAAAAAAAAACAEAAAAAAABKAQAAAAAAAAAAAABKAQAAAAAAAEsBAAAAAAAAAAAAAEsBAAAAAAAATAEAAAAAAAAAAAAATAEAAAAAAACTAQAAAAAAAAAAAACTAQAAAAAAAJQBAAAAAAAAAAAAAJQBAAAAAAAA4wEAAAAAAAAAAAAA4wEAAAAAAADkAQAAAAAAAAAAAADkAQAAAAAAABUCAAAAAAAAAAAAABUCAAAAAAAAFgIAAAAAAAAAAAAAFgIAAAAAAAAXAgAAAAAAAAAAAAAXAgAAAAAAAGQCAAAAAAAAAAAAAGQCAAAAAAAAZQIAAAAAAAAAAAAAZQIAAAAAAACHAgAAAAAAAAAAAACHAgAAAAAAAIgCAAAAAAAAAAAAAIgCAAAAAAAAuwIAAAAAAAAAAAAAuwIAAAAAAAC8AgAAAAAAAAAAAAC8AgAAAAAAAL0CAAAAAAAAAAAAAL0CAAAAAAAAvgIAAAAAAAAAAAAAvgIAAAAAAAAGAwAAAAAAAAAAAAAGAwAAAAAAAAcDAAAAAAAAAAAAAAcDAAAAAAAAPwMAAAAAAAAAAAAAPwMAAAAAAABAAwAAAAAAAAAAAABAAwAAAAAAAEEDAAAAAAAAAAAAAEEDAAAAAAAAigMAAAAAAAAAAAAAigMAAAAAAACLAwAAAAAAAAAAAACLAwAAAAAAAMUDAAAAAAAAAAAAAMUDAAAAAAAAxgMAAAAAAAAAAAAAxgMAAAAAAADHAwAAAAAAAAAAAADHAwAAAAAAABIEAAAAAAAAAAAAABIEAAAAAAAAEwQAAAAAAAAAAAAAEwQAAAAAAABaBAAAAAAAAAAAAABaBAAAAAAAAFsEAAAAAAAAAAAAAFsEAAAAAAAAhAQAAAAAAAAAAAAAhAQAAAAAAACFBAAAAAAAAAAAAACFBAAAAAAAAIYEAAAAAAAAAAAAAIYEAAAAAAAAlQQAAAAAAAAAAAAAlQQAAAAAAACWBAAAAAAAAAAAAACWBAAAAAAAAKsEAAAAAAAAAAAAAKsEAAAAAAAArAQAAAAAAAAAAAAArAQAAAAAAAC7BAAAAAAAAAAAAAC7BAAAAAAAALwEAAAAAAAAAAAAALwEAAAAAAAACAUAAAAAAAAAAAAACAUAAAAAAAAJBQAAAAAAAAAAAAAJBQAAAAAAACkFAAAAAAAAAAAAACkFAAAAAAAAKgUAAAAAAAAAAAAAKgUAAAAAAABmBQAAAAAAAAAAAABmBQAAAAAAAGcFAAAAAAAAAAAAAGcFAAAAAAAAqQUAAAAAAAAAAAAAqQUAAAAAAACqBQAAAAAAAAAAAACqBQAAAAAAALoFAAAAAAAAAAAAALoFAAAAAAAAuwUAAAAAAAAAAAAAuwUAAAAAAADKBQAAAAAAAAAAAADKBQAAAAAAAMsFAAAAAAAAAAAAAMsFAAAAAAAAFAYAAAAAAAAAAAAAFAYAAAAAAAAVBgAAAAAAAAAAAAAVBgAAAAAAACQGAAAAAAAAAAAAACQGAAAAAAAAJQYAAAAAAAAAAAAAJQYAAAAAAAAxBgAAAAAAAAAAAAAxBgAAAAAAADIGAAAAAAAAAAAAADIGAAAAAAAAOgYAAAAAAAAAAAAAOgYAAAAAAAA7BgAAAAAAAAAAAAA7BgAAAAAAADwGAAAAAAAAAAAAADwGAAAAAAAAVgYAAAAAAAAAAAAAVgYAAAAAAABXBgAAAAAAAAAAAABXBgAAAAAAAFgGAAAAAAAAAAAAAFgGAAAAAAAApAYAAAAAAAAAAAAApAYAAAAAAAClBgAAAAAAAAAAAAClBgAAAAAAALEGAAAAAAAAAAAAALEGAAAAAAAAsgYAAAAAAAAAAAAAsgYAAAAAAACzBgAAAAAAAAAAAACzBgAAAAAAAMkGAAAAAAAAAAAAAMkGAAAAAAAAygYAAAAAAAAAAAAAygYAAAAAAADfBgAAAAAAAAAAAADfBgAAAAAAAOAGAAAAAAAAAAAAAOAGAAAAAAAA7wYAAAAAAAAAAAAA7wYAAAAAAADwBgAAAAAAAAAAAADwBgAAAAAAABUHAAAAAAAAAAAAABUHAAAAAAAAFgcAAAAAAAAAAAAAFgcAAAAAAABBBwAAAAAAAAAAAABBBwAAAAAAAEIHAAAAAAAAAAAAAEIHAAAAAAAAZQcAAAAAAAAAAAAAZQcAAAAAAABmBwAAAAAAAAAAAABmBwAAAAAAAHYHAAAAAAAAAAAAAHYHAAAAAAAAdwcAAAAAAAAAAAAAdwcAAAAAAACGBwAAAAAAAAAAAACGBwAAAAAAAIcHAAAAAAAAAAAAAIcHAAAAAAAAqgcAAAAAAAAAAAAAqgcAAAAAAACrBwAAAAAAAAAAAACrBwAAAAAAAMoHAAAAAAAAAAAAAMoHAAAAAAAAywcAAAAAAAAAAAAAywcAAAAAAADbBwAAAAAAAAAAAADbBwAAAAAAANwHAAAAAAAAAAAAANwHAAAAAAAA5wcAAAAAAAAAAAAA5wcAAAAAAADoBwAAAAAAAAAAAADoBwAAAAAAAPAHAAAAAAAAAAAAAPAHAAAAAAAA8QcAAAAAAAAAAAAA8QcAAAAAAADyBwAAAAAAAAAAAADyBwAAAAAAAPMHAAAAAAAAAAAAAPMHAAAAAAAAQQgAAAAAAAAAAAAAQQgAAAAAAABCCAAAAAAAAAAAAABCCAAAAAAAAI8IAAAAAAAAAAAAAI8IAAAAAAAAkAgAAAAAAAAAAAAAkAgAAAAAAADdCAAAAAAAAAAAAADdCAAAAAAAAN4IAAAAAAAAAAAAAN4IAAAAAAAAJQkAAAAAAAAAAAAAJQkAAAAAAAAmCQAAAAAAAAAAAAAmCQAAAAAAACcJAAAAAAAAAAAAACcJAAAAAAAAegkAAAAAAAAAAAAAegkAAAAAAAB7CQAAAAAAAAAAAAB7CQAAAAAAAM8JAAAAAAAAAAAAAM8JAAAAAAAA0AkAAAAAAAAAAAAA0AkAAAAAAADRCQAAAAAAAAAAAADRCQAAAAAAAPYJAAAAAAAAAAAAAPYJAAAAAAAA9wkAAAAAAAAAAAAA9wkAAAAAAAAtCgAAAAAAAAAAAAAtCgAAAAAAAC4KAAAAAAAAAAAAAC4KAAAAAAAAZwoAAAAAAAAAAAAAZwoAAAAAAABoCgAAAAAAAAAAAABoCgAAAAAAAHAKAAAAAAAAAAAAAHAKAAAAAAAAcQoAAAAAAAAAAAAAcQoAAAAAAAByCgAAAAAAAAAAAAByCgAAAAAAAJEKAAAAAAAAAAAAAJEKAAAAAAAAkgoAAAAAAAAAAAAAkgoAAAAAAACTCgAAAAAAAAAAAACTCgAAAAAAAJQKAAAAAAAAAAAAAJQKAAAAAAAAoAoAAAAAAAAAAAAAoAoAAAAAAAChCgAAAAAAAAAAAAChCgAAAAAAAKUKAAAAAAAAAAAAAKUKAAAAAAAApgoAAAAAAAAAAAAApgoAAAAAAACnCgAAAAAAAAAAAACnCgAAAAAAAKgKAAAAAAAAAAAAAKgKAAAAAAAA4goAAAAAAAAAAAAA4goAAAAAAADjCgAAAAAAAAAAAADjCgAAAAAAAOQKAAAAAAAAAAAAAOQKAAAAAAAAMQsAAAAAAAAAAAAAMQsAAAAAAAAyCwAAAAAAAAAAAAAyCwAAAAAAAH4LAAAAAAAAAAAAAH4LAAAAAAAAfwsAAAAAAAAAAAAAfwsAAAAAAACcCwAAAAAAAAAAAACcCwAAAAAAAJ0LAAAAAAAAAAAAAJ0LAAAAAAAA7AsAAAAAAAAAAAAA7AsAAAAAAADtCwAAAAAAAAAAAADtCwAAAAAAADoMAAAAAAAAAAAAADoMAAAAAAAAOwwAAAAAAAAAAAAAOwwAAAAAAACFDAAAAAAAAAAAAACFDAAAAAAAAIYMAAAAAAAAAAAAAIYMAAAAAAAAmQwAAAAAAAAAAAAA",
					"AQAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPC/"
				]
			]
		}
	],
	"build_system": "",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				]
			],
			[
				"Packages/Python/Python.sublime-build",
				""
			]
		],
		[
			[
				[
					"Packages/Python/Python.sublime-build",
					""
				],
				[
					"Packages/Python/Python.sublime-build",
					"Syntax Check"
				],
				[
					"Packages/Conda/Conda.sublime-build",
					""
				]
			],
			[
				"Packages/Conda/Conda.sublime-build",
				""
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"notebook",
				"Open IPython Notebook"
			],
			[
				"note",
				"Save IPython Notebook"
			],
			[
				"insta",
				"Package Control: Install Package"
			],
			[
				"shell",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"remo",
				"Package Control: Remove Package"
			],
			[
				"mark",
				"Markdown Preview: Preview in Browser"
			],
			[
				"py",
				"PyYapf: Format Document"
			],
			[
				"sideba",
				"View: Toggle Open Files in Side Bar"
			],
			[
				"sidebar",
				"View: Toggle Side Bar"
			],
			[
				"newfi",
				"ANF: New File"
			],
			[
				"conda",
				"Conda: Activate Environment"
			],
			[
				"git pu",
				"Git: Push"
			],
			[
				"git status",
				"Git: Status"
			],
			[
				"git commit",
				"Git: Commit"
			],
			[
				"git stat",
				"Git: Status"
			],
			[
				"git commi",
				"Git: Commit history"
			],
			[
				"git comm",
				"Set Syntax: Git Commit"
			],
			[
				"git add",
				"Git: Add Current File"
			],
			[
				"mar",
				"Markdown Preview: Preview in Browser"
			],
			[
				"side",
				"View: Toggle Side Bar"
			],
			[
				"linter",
				"SublimeLinter: Goto Error"
			],
			[
				"ins",
				"Package Control: Install Package"
			],
			[
				"inst",
				"Package Control: Install Package"
			],
			[
				"mode",
				"Set Syntax: Modern-Fortran"
			],
			[
				"in",
				"Package Control: Install Package"
			],
			[
				"gra",
				"Sourcegraph: Open"
			],
			[
				"sour",
				"Sourcegraph: Open"
			],
			[
				"packa",
				"Package Control: Install Package"
			],
			[
				"termin",
				"Terminus: Open Default Shell in Panel"
			],
			[
				"graph",
				"Sourcegraph: Open"
			],
			[
				"git graph",
				"Set Syntax: Git Graph"
			],
			[
				"tview",
				"Terminus: Open Default Shell in Tab (View)"
			],
			[
				"ma",
				"Markdown Preview: Preview in Browser"
			],
			[
				"Package Control: in",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: Install Package"
			],
			[
				"Package Control: is",
				"Package Control: Install Package"
			],
			[
				"Snippet: i",
				"Snippet: If Condition"
			]
		],
		"width": 0.0
	},
	"console":
	{
		"height": 112.0,
		"history":
		[
			"x+y",
			"y = 2",
			"x = 1",
			"pwd",
			"ls"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/home/javi/Desktop/Programar/freecodecamp/freecodecamp_ml/src",
		"/home/javi/Desktop/Programar/freecodecamp/freecodecamp_ml/docs"
	],
	"file_history":
	[
		"/home/javi/Desktop/Programar/freecodecamp/freecodecamp_ml/fcc_ml.sublime-project",
		"/home/javi/Desktop/Programar/freecodecamp/freecodecamp_ml/fcc_cat_dog/.ipynb_checkpoints/fcc_cat_dog-checkpoint.ipynb",
		"/home/javi/Desktop/atoms.py",
		"/home/javi/Desktop/Programming/Tutorial/Docker/getting-started/app/src/static/js/app.js",
		"/home/javi/Desktop/Programming/Tutorial/Docker/getting-started/app/Dockerfile",
		"/home/javi/Desktop/ESQC/Lectures/Math/Lecture 2 - space of polynomials.ipynb",
		"/home/javi/Desktop/Programming/CodeRefineryCourse0322/testing/test",
		"/home/javi/Desktop/Programming/CodeRefineryCourse0322/testing/.git/MERGE_MSG",
		"/home/javi/Desktop/Programming/CodeRefineryCourse0322/coderefinery-documentation-example-project/COMMIT_EDITMSG.git-commit-view",
		"/home/javi/Desktop/Programming/CodeRefineryCourse0322/centralized-workflow-exercise/javierdomcal.txt",
		"/home/javi/.config/sublime-text/Packages/User/SublimeLinter.sublime-settings",
		"/home/javi/.config/sublime-text/Packages/SublimeLinter/SublimeLinter.sublime-settings",
		"/home/javi/.config/sublime-text/Packages/sourcegraph/README.md",
		"/home/javi/.config/sublime-text/Packages/sourcegraph/LICENSE",
		"/home/javi/Desktop/Programming/CodeRefineryCourse0322/Guacamole/instructions.txt",
		"/home/javi/Desktop/Programming/CodeRefineryCourse0322/Guacamole/README.md",
		"/home/javi/Desktop/Programming/CodeRefineryCourse0322/Guacamole/ingredients.txt.orig",
		"/home/javi/Desktop/Programming/CodeRefineryCourse0322/Guacamole/ingredients.txt",
		"/home/javi/example_git/example.py",
		"/home/javi/Desktop/Programming/test2.py",
		"/home/javi/example_git/ftpsync.settings",
		"/home/javi/.config/sublime-text/Packages/User/AdvancedNewFile.sublime-settings",
		"/home/javi/example_git/example2.py",
		"/home/javi/Desktop/Programming/htmlexample.html",
		"/home/javi/Desktop/Programming/markexample.html",
		"/home/javi/Desktop/Programming/markexample.md",
		"/home/javi/example2"
	],
	"find":
	{
		"height": 38.0
	},
	"find_in_files":
	{
		"height": 98.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
		],
		"reverse": false,
		"scrollbar_highlights": true,
		"show_context": true,
		"use_buffer2": true,
		"use_gitignore": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"sheets":
			[
				{
					"buffer": 0,
					"file": ".gitignore",
					"selected": true,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1867,
						"regions":
						{
						},
						"selection":
						[
							[
								1866,
								1866
							]
						],
						"settings":
						{
							"git_gutter_is_enabled": true,
							"syntax": "Packages/Git Formats/Git Ignore.sublime-syntax"
						},
						"translation.x": 0.0,
						"translation.y": 1173.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"stack_multiselect": false,
					"type": "text"
				},
				{
					"buffer": 1,
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3225,
						"regions":
						{
						},
						"selection":
						[
							[
								3224,
								3224
							]
						],
						"settings":
						{
							"auto_indent": false,
							"default_dir": "/home/javi/Desktop/Programar/freecodecamp/freecodecamp_ml",
							"git_gutter_is_enabled": false,
							"syntax": "Packages/Text/Plain text.tmLanguage",
							"tab_width": 2,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 633.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"stack_multiselect": false,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 24.0
	},
	"input":
	{
		"height": 36.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.SublimeLinter":
	{
		"height": 0.0
	},
	"output.Terminus":
	{
		"height": 257.0
	},
	"output.exec":
	{
		"height": 108.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"output.git":
	{
		"height": 108.0
	},
	"output.markdown":
	{
		"height": 108.0
	},
	"output.mdpopups":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "fcc_ml.sublime-project",
	"replace":
	{
		"height": 44.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": true,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 157.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
